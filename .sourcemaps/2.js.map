{"version":3,"sources":["../../src/pages/weather/weather.module.ts","../../src/pages/weather/weather.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAyC;AACO;AACZ;AAapC,IAAa,aAAa;IAA1B;IAA4B,CAAC;IAAD,oBAAC;AAAD,CAAC;AAAhB,aAAa;IAXzB,uEAAQ,CAAC;QACR,YAAY,EAAE;YACZ,yDAAO;SACR;QACD,OAAO,EAAE;YACP,sEAAe,CAAC,QAAQ,CAAC,yDAAO,CAAC;SAClC;QACD,OAAO,EAAE;YACP,yDAAO;SACR;KACF,CAAC;GACW,aAAa,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;ACfyB;AACG;AACZ;AAC0C;AASpF,IAAa,OAAO;IASlB,iBAAmB,OAAsB,EAAS,SAAoB,EAAU,QAAwB,EAC9F,IAAkB;QADT,YAAO,GAAP,OAAO,CAAe;QAAS,cAAS,GAAT,SAAS,CAAW;QAAU,aAAQ,GAAR,QAAQ,CAAgB;QAC9F,SAAI,GAAJ,IAAI,CAAc;QAT5B,aAAQ,GAAG,kEAAS,CAAC,GAAG,CAAC;QACzB,YAAO,GAAG,EAAE,CAAC;QACb,eAAU,GAAG,IAAI,CAAC;QAClB,eAAU,GAAG,EAAE,CAAC;QAChB,aAAQ,GAAG;YACT,QAAQ,EAAE,IAAI;YACd,IAAI,EAAE,IAAI;SACX;QAGC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;IACtC,CAAC;IAXwB,CAAC;IAa1B,kCAAgB,GAAhB;QACE,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IACD,gCAAc,GAAd;QACE,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;IACxC,CAAC;IAED,yBAAO,GAAP;QAAA,iBAUC;QATC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,UAAC,MAAW;YAChE,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,IAAI,GAAG,CAAC,CAAC,CAAC;gBAC1B,KAAI,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YAClC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,KAAI,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YACpC,CAAC;QACH,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;QAEf,CAAC,CAAC;IACJ,CAAC;IAED,yBAAO,GAAP;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YACtC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACzB,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACzB,CAAC;IACH,CAAC;IAED,2BAAS,GAAT;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,CAAC,CAAC;YAC5B,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC;YACrC,IAAI,CAAC,OAAO,EAAE,CAAC;QACjB,CAAC;IACH,CAAC;IACH,cAAC;AAAD,CAAC;AA/CY,OAAO;IAPnB,wEAAS,CAAC;QACT,IAAI,EAAE,SAAS;KAChB,CAAC;IACD,wEAAS,CAAC;QACT,QAAQ,EAAE,cAAc;OACG;KAC5B,CAAC;+EAUwG;QACxF,IAAY;AAqC7B;SA/CY,OAAO,mB","file":"2.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { Weather } from './weather';\n\n@NgModule({\n  declarations: [\n    Weather,\n  ],\n  imports: [\n    IonicPageModule.forChild(Weather),\n  ],\n  exports: [\n    Weather\n  ]\n})\nexport class WeatherModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/weather/weather.module.ts","import { AppConfig } from './../../app/app.config';\nimport { UtilProvider } from './../../providers/util';\nimport { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams, MenuController } from 'ionic-angular';\n\n@IonicPage({\n  name: 'weather'\n})\n@Component({\n  selector: 'page-weather',\n  templateUrl: 'weather.html',\n})\nexport class Weather {\n  base_url = AppConfig.Url;;\n  weather = {};\n  cancelText = \"取消\";\n  inputValue = \"\";\n  postData = {\n    province: \"四川\",\n    city: \"成都\"\n  }\n  constructor(public navCtrl: NavController, public navParams: NavParams, private menuCtrl: MenuController,\n    private util: UtilProvider) {\n    this.menuCtrl.enable(false, \"menu\");\n  }\n\n  ionViewWillEnter() {\n    this.refresh();\n  }\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad Weather');\n  }\n\n  refresh() {\n    this.util.post(\"/common/weather\", this.postData).then((result: any) => {\n      if (result.retCode == 200) {\n        this.weather = result.result[0];\n      } else {\n        this.util.showLoading(result.msg);\n      }\n    }).catch((error) => {\n\n    })\n  }\n\n  onInput() {\n    if (this.inputValue.trim().length > 0) {\n      this.cancelText = \"确定\";\n    } else {\n      this.cancelText = \"取消\";\n    }\n  }\n\n  cancelBtn() {\n    if (this.cancelText == \"确定\") {\n      this.postData.city = this.inputValue;\n      this.refresh();\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/weather/weather.ts"],"sourceRoot":""}