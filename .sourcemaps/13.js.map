{"version":3,"sources":["../../src/pages/modal-city/modal-city.module.ts","../../src/pages/modal-city/modal-city.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAyC;AACO;AACH;AAU7C;IAAA;IAAkC,CAAC;IAAtB,mBAAmB;QAR/B,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,kEAAa;aACd;YACD,OAAO,EAAE;gBACP,sEAAe,CAAC,QAAQ,CAAC,kEAAa,CAAC;aACxC;SACF,CAAC;OACW,mBAAmB,CAAG;IAAD,0BAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;ACZsB;AACW;AACQ;AAOzE;IAcE,uBAAmB,OAAsB,EAAS,SAAoB,EAAU,IAAkB,EACxF,UAAsB,EAAU,QAAmB,EAAU,QAAwB;QAD5E,YAAO,GAAP,OAAO,CAAe;QAAS,cAAS,GAAT,SAAS,CAAW;QAAU,SAAI,GAAJ,IAAI,CAAc;QACxF,eAAU,GAAV,UAAU,CAAY;QAAU,aAAQ,GAAR,QAAQ,CAAW;QAAU,aAAQ,GAAR,QAAQ,CAAgB;QAb/F,aAAa;QACb,iBAAY,GAAG,EAAE,CAAC;QAClB,aAAQ,GAAG,EAAE,CAAC;QACd,aAAQ,GAAG,EAAE,CAAC;QACd,uBAAuB;QACvB,iBAAY,GAAY,IAAI,CAAC;QAC7B,aAAQ,GAAY,KAAK,CAAC;QAC1B,aAAQ,GAAY,KAAK,CAAC;QAC1B,aAAa;QACb,cAAS,GAAG,EAAE,CAAC;QACf,WAAM,GAAG,EAAE,CAAC;QACZ,UAAK,GAAG,EAAE,CAAC;QAGT,IAAI,CAAC,GAAG,GAAG,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC;QAC9B,IAAI,CAAC,YAAY,GAAG,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC;QAC5C,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC;QACpC,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC;IACtC,CAAC;IAED,wCAAgB,GAAhB;QAAA,iBAuBC;QAtBC,wCAAwC;QACxC,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YACxD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,IAAI,CAAC,UAAC,MAAW;gBAC3H,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC;gBACnB,EAAE,CAAC,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;oBACpB,KAAI,CAAC,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;oBACvC,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;oBACjC,KAAI,CAAC,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;gBACjC,CAAC;YACH,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;YAEf,CAAC,CAAC;QACJ,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,UAAC,MAAW;gBAC9C,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC;gBACnB,EAAE,CAAC,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;oBACpB,KAAI,CAAC,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC;gBAC/B,CAAC;YACH,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;YAEf,CAAC,CAAC;QACJ,CAAC;IACH,CAAC;IAED,kBAAkB;IAClB,sCAAc,GAAd,UAAe,IAAI;QAAnB,iBAmBC;QAlBC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC;QAClC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,qBAAqB,EAAE,EAAE,UAAU,EAAE,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC,IAAI,CAAC,UAAC,MAAW;YACtF,EAAE,CAAC,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;gBACpB,KAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;gBACnB,KAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;gBACnB,IAAI,IAAI,GAAG,KAAI,CAAC,UAAU,CAAC,aAAa,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC;gBACvE,IAAI,CAAC,OAAO,CAAC,iBAAO;oBAClB,KAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC;gBACnD,CAAC,CAAC,CAAC;gBACH,KAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAI,CAAC,UAAU,CAAC,aAAa,CAAC,aAAa,CAAC,SAAS,CAAC,EAAE,YAAY,CAAC,CAAC;gBAC7F,KAAI,CAAC,YAAY,GAAG,KAAK,CAAC;gBAC1B,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;gBACrB,KAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;gBACtB,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC;YAC5B,CAAC;QACH,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;QAEf,CAAC,CAAC;IACJ,CAAC;IACD,kBAAkB;IAClB,kCAAU,GAAV,UAAW,IAAI;QAAf,iBAkBC;QAjBC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC;QAC1B,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,IAAI,CAAC,UAAC,MAAW;YAC1E,EAAE,CAAC,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;gBACpB,KAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;gBACnB,IAAI,IAAI,GAAG,KAAI,CAAC,UAAU,CAAC,aAAa,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC;gBACvE,IAAI,CAAC,OAAO,CAAC,iBAAO;oBAClB,KAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC;gBACnD,CAAC,CAAC,CAAC;gBACH,KAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAI,CAAC,UAAU,CAAC,aAAa,CAAC,aAAa,CAAC,SAAS,CAAC,EAAE,YAAY,CAAC,CAAC;gBAC7F,KAAI,CAAC,YAAY,GAAG,KAAK,CAAC;gBAC1B,KAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;gBACtB,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;gBACrB,KAAI,CAAC,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC;YAC3B,CAAC;QACH,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;QAEf,CAAC,CAAC;IACJ,CAAC;IACD,SAAS;IACT,kCAAU,GAAV,UAAW,IAAI;QAAf,iBAaC;QAZC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC;QAC1B,gBAAgB;QAChB,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YACxD,IAAI,MAAI,GAAG,EAAE,QAAQ,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,EAAE,IAAI,CAAC,QAAQ,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE;YACnG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,MAAI,CAAC,CAAC,IAAI,CAAC,UAAC,MAAW;gBACpD,EAAE,CAAC,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;oBACpB,KAAI,CAAC,KAAK,EAAE,CAAC;gBACf,CAAC;YACH,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;YAEf,CAAC,CAAC;QACJ,CAAC;IACH,CAAC;IAED,aAAa;IACb,uCAAe,GAAf,UAAgB,CAAM;QAAtB,iBASC;QARC,IAAI,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC;QACvE,IAAI,CAAC,OAAO,CAAC,iBAAO;YAClB,KAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC;QACnD,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;QAC/C,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;IACxB,CAAC;IACD,aAAa;IACb,mCAAW,GAAX,UAAY,CAAC;QAAb,iBASC;QARC,IAAI,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC;QACvE,IAAI,CAAC,OAAO,CAAC,iBAAO;YAClB,KAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC;QACnD,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;QAC/C,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC1B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;IACxB,CAAC;IACD,aAAa;IACb,mCAAW,GAAX,UAAY,CAAC;QAAb,iBASC;QARC,IAAI,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC;QACvE,IAAI,CAAC,OAAO,CAAC,iBAAO;YAClB,KAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC;QACnD,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;QAC/C,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC1B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;IACvB,CAAC;IACD,aAAa;IACb,6BAAK,GAAL;QACE,IAAI,IAAI,GAAG,EAAE,QAAQ,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC;QAChD,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YACxD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC;YAClC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC;YAC1B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC5B,CAAC;QACD,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IAC9B,CAAC;IAlJU,aAAa;QAJzB,wEAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;WACG;SAC/B,CAAC;sNAe4B,EAAsE;YAC5E,UAAyE;OAfpF,aAAa,CAmJzB;IAAD,CAAC;AAAA;SAnJY,aAAa,gB","file":"13.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { ModalCityPage } from './modal-city';\n\n@NgModule({\n  declarations: [\n    ModalCityPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(ModalCityPage),\n  ],\n})\nexport class ModalCityPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/modal-city/modal-city.module.ts","import { UtilProvider } from './../../providers/util';\nimport { Component, ElementRef, Renderer2 } from '@angular/core';\nimport { IonicPage, NavController, NavParams, ViewController } from 'ionic-angular';\n\n@IonicPage({\n  name: 'modal-city'\n})\n@Component({\n  selector: 'page-modal-city',\n  templateUrl: 'modal-city.html',\n})\nexport class ModalCityPage {\n  uid: '';\n  /* 定义省市区名称 */\n  provinceName = \"\";\n  cityName = \"\";\n  areaName = \"\";\n  /* 定义flag用于控制显示省市区视图 */\n  provinceFlag: boolean = true;\n  cityFlag: boolean = false;\n  areaFlag: boolean = false;\n  /* 定义省市区数组 */\n  provinces = [];\n  cities = [];\n  areas = [];\n  constructor(public navCtrl: NavController, public navParams: NavParams, private util: UtilProvider,\n    private elementRef: ElementRef, private renderer: Renderer2, private viewCtrl: ViewController) {\n    this.uid = navParams.data.uid;\n    this.provinceName = navParams.data.province;\n    this.cityName = navParams.data.city;\n    this.areaName = navParams.data.area;\n  }\n\n  ionViewWillEnter() {\n    /* 如果没有省市区默认加载省份,否则根据省份和城市和区域查询出对应的数据 */\n    if (this.provinceName && this.cityName && this.areaName) {\n      this.util.post(\"/province/full\", { province: this.provinceName, city: this.cityName, area: this.areaName }).then((result: any) => {\n        console.log(result)\n        if (result.err == 0) {\n          this.provinces = result.data.provinces;\n          this.cities = result.data.cities;\n          this.areas = result.data.areas;\n        }\n      }).catch((error) => {\n\n      })\n    } else {\n      this.util.get(\"/province/all\").then((result: any) => {\n        console.log(result)\n        if (result.err == 0) {\n          this.provinces = result.data;\n        }\n      }).catch((error) => {\n\n      })\n    }\n  }\n\n  /* 选中省，获取对应的下级市 */\n  selectProvince(data) {\n    this.provinceName = data.province;\n    this.util.post(\"/city/province_city\", { provinceid: data.provinceid }).then((result: any) => {\n      if (result.err == 0) {\n        this.cityName = \"\";\n        this.areaName = \"\";\n        let btns = this.elementRef.nativeElement.querySelectorAll(\".item_btn\");\n        btns.forEach(element => {\n          this.renderer.removeClass(element, 'active_btn');\n        });\n        this.renderer.addClass(this.elementRef.nativeElement.querySelector(\".select\"), 'active_btn');\n        this.provinceFlag = false;\n        this.cityFlag = true;\n        this.areaFlag = false;\n        this.cities = result.data;\n      }\n    }).catch((error) => {\n\n    })\n  }\n  /* 选中市，获取对应的下级区 */\n  selectCity(data) {\n    this.cityName = data.city;\n    this.util.post(\"/area/city_area\", { cityid: data.cityid }).then((result: any) => {\n      if (result.err == 0) {\n        this.areaName = \"\";\n        let btns = this.elementRef.nativeElement.querySelectorAll(\".item_btn\");\n        btns.forEach(element => {\n          this.renderer.removeClass(element, 'active_btn');\n        });\n        this.renderer.addClass(this.elementRef.nativeElement.querySelector(\".select\"), 'active_btn');\n        this.provinceFlag = false;\n        this.cityFlag = false;\n        this.areaFlag = true;\n        this.areas = result.data;\n      }\n    }).catch((error) => {\n\n    })\n  }\n  /* 选中区 */\n  selectArea(data) {\n    this.areaName = data.area;\n    /* 将地址信息存入数据库 */\n    if (this.provinceName && this.cityName && this.areaName) {\n      let data = { province: this.provinceName, city: this.cityName, area: this.areaName, uid: this.uid }\n      this.util.post(\"/user/update\", data).then((result: any) => {\n        if (result.err == 0) {\n          this.close();\n        }\n      }).catch((error) => {\n\n      })\n    }\n  }\n\n  /* 点击已选择的省 */\n  currentProvince(e: any) {\n    let btns = this.elementRef.nativeElement.querySelectorAll(\".item_btn\");\n    btns.forEach(element => {\n      this.renderer.removeClass(element, 'active_btn');\n    });\n    this.renderer.addClass(e.target, 'active_btn');\n    this.provinceFlag = true;\n    this.cityFlag = false;\n    this.areaFlag = false;\n  }\n  /* 点击已选择的市 */\n  currentCity(e) {\n    let btns = this.elementRef.nativeElement.querySelectorAll(\".item_btn\");\n    btns.forEach(element => {\n      this.renderer.removeClass(element, 'active_btn');\n    });\n    this.renderer.addClass(e.target, 'active_btn');\n    this.provinceFlag = false;\n    this.cityFlag = true;\n    this.areaFlag = false;\n  }\n  /* 点击已选择的区 */\n  currentArea(e) {\n    let btns = this.elementRef.nativeElement.querySelectorAll(\".item_btn\");\n    btns.forEach(element => {\n      this.renderer.removeClass(element, 'active_btn');\n    });\n    this.renderer.addClass(e.target, 'active_btn');\n    this.provinceFlag = false;\n    this.cityFlag = false;\n    this.areaFlag = true;\n  }\n  /* 关闭modal */\n  close() {\n    let data = { province: \"\", city: \"\", area: \"\" };\n    if (this.provinceName && this.cityName && this.areaName) {\n      data.province = this.provinceName;\n      data.city = this.cityName;\n      data.area = this.areaName;\n    }\n    this.viewCtrl.dismiss(data);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/modal-city/modal-city.ts"],"sourceRoot":""}